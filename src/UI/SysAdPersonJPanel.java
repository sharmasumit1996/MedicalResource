/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.City;
import Model.CityHistory;
import Model.Community;
import Model.CommunityHistory;
import Model.House;
import Model.HouseHistory;
import Model.Person;
import Model.PersonDirectory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sumit
 */
public class SysAdPersonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SysAdPersonJPanel
     */
    CommunityHistory communityHistory;
    CityHistory cityHistory;
    HouseHistory houseHistory;
    House house;
    PersonDirectory personDirectory;
    public SysAdPersonJPanel(PersonDirectory personDirectory, HouseHistory houseHistory, CityHistory cityHistory, CommunityHistory communityHistory) {
        initComponents();
        this.communityHistory = communityHistory;
        this.cityHistory = cityHistory;
        this.houseHistory = houseHistory;
        this.personDirectory = personDirectory;
        populateTable();
    }
    
    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel)PersonJTable.getModel();
        model.setRowCount(0);
        for(Person pers: personDirectory.getPerHistory()){
            Object[] row = new Object[6];
            row[0] = pers.getPersonID();
            row[1] = pers.getName();
            row[2] = pers.getAge();
            row[3] = pers.getHouse();
            row[4] = pers.getCommunity();
            row[5] = pers.getCity();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IDlbl = new javax.swing.JLabel();
        Namelbl = new javax.swing.JLabel();
        Agelbl = new javax.swing.JLabel();
        ApartmentNolbl = new javax.swing.JLabel();
        Communitylbl = new javax.swing.JLabel();
        Citylbl = new javax.swing.JLabel();
        Personlbl = new javax.swing.JLabel();
        IDtxt = new javax.swing.JTextField();
        Nametxt = new javax.swing.JTextField();
        Agetxt = new javax.swing.JTextField();
        ApartmentNotxt = new javax.swing.JTextField();
        Communitytxt = new javax.swing.JTextField();
        Citytxt = new javax.swing.JTextField();
        Savebtn = new javax.swing.JButton();
        Updatebtn = new javax.swing.JButton();
        Deletebtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PersonJTable = new javax.swing.JTable();

        IDlbl.setText("Person ID:");

        Namelbl.setText("Full Name:");

        Agelbl.setText("Age:");

        ApartmentNolbl.setText("Apartment Number:");

        Communitylbl.setText("Community:");

        Citylbl.setText("City:");

        Personlbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Personlbl.setText("PERSON");

        Savebtn.setText("Save");
        Savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavebtnActionPerformed(evt);
            }
        });

        Updatebtn.setText("Update");
        Updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatebtnActionPerformed(evt);
            }
        });

        Deletebtn.setText("Save");
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });

        PersonJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Person ID", "Full Name", "Age", "Apartment Number", "Community", "City"
            }
        ));
        PersonJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PersonJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(PersonJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Personlbl)
                .addGap(348, 348, 348))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ApartmentNolbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(IDlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Namelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Citylbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Communitylbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Agelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Agetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Deletebtn)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(IDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(ApartmentNotxt)
                                    .addComponent(Communitytxt)
                                    .addComponent(Citytxt)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Savebtn)
                        .addGap(28, 28, 28)
                        .addComponent(Updatebtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Personlbl)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IDlbl)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Namelbl)
                            .addComponent(Nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Agelbl)
                            .addComponent(Agetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ApartmentNolbl)
                            .addComponent(ApartmentNotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Communitylbl)
                            .addComponent(Communitytxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Citylbl)
                            .addComponent(Citytxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(IDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Savebtn)
                    .addComponent(Updatebtn)
                    .addComponent(Deletebtn))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(218, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SavebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavebtnActionPerformed
        // TODO add your handling code here:
        if(validate(IDtxt.getText(),Nametxt.getText(), Integer.parseInt(Agetxt.getText()),ApartmentNotxt.getText(),Communitytxt.getText(), Citytxt.getText())){
            Person PersonNew = personDirectory.addNewValue();
            PersonNew.setPersonID(IDtxt.getText());
            PersonNew.setName(Nametxt.getText());
            PersonNew.setAge(Integer.parseInt(Agetxt.getText()));
            PersonNew.setHouse(ApartmentNotxt.getText());
            PersonNew.setCommunity(Communitytxt.getText());
            PersonNew.setCity(Citytxt.getText());
            house.person.add(PersonNew);
            JOptionPane.showMessageDialog(this, "New Person Added in the house");
        }
        IDtxt.setText("");
        Nametxt.setText("");
        Agetxt.setText("");
        ApartmentNotxt.setText("");
        Communitytxt.setText("");
        Citytxt.setText("");
        populateTable();
    }//GEN-LAST:event_SavebtnActionPerformed

    private void UpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdatebtnActionPerformed

    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeletebtnActionPerformed

    private void PersonJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PersonJTableMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = PersonJTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) PersonJTable.getModel();
        IDtxt.setText(model.getValueAt(selectedRowIndex, 0).toString());
        Nametxt.setText(model.getValueAt(selectedRowIndex, 1).toString());
        Agetxt.setText(model.getValueAt(selectedRowIndex, 2).toString());
        ApartmentNotxt.setText(model.getValueAt(selectedRowIndex, 3).toString());
        Communitytxt.setText(model.getValueAt(selectedRowIndex, 4).toString());
        Citytxt.setText(model.getValueAt(selectedRowIndex, 5).toString());
    }//GEN-LAST:event_PersonJTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Agelbl;
    private javax.swing.JTextField Agetxt;
    private javax.swing.JLabel ApartmentNolbl;
    private javax.swing.JTextField ApartmentNotxt;
    private javax.swing.JLabel Citylbl;
    private javax.swing.JTextField Citytxt;
    private javax.swing.JLabel Communitylbl;
    private javax.swing.JTextField Communitytxt;
    private javax.swing.JButton Deletebtn;
    private javax.swing.JLabel IDlbl;
    private javax.swing.JTextField IDtxt;
    private javax.swing.JLabel Namelbl;
    private javax.swing.JTextField Nametxt;
    private javax.swing.JTable PersonJTable;
    private javax.swing.JLabel Personlbl;
    private javax.swing.JButton Savebtn;
    private javax.swing.JButton Updatebtn;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

private boolean validate(String ID, String Name, int age, String houses, String community, String city){
    
        City c1;
        Community comm;
        House h1;
        boolean fetch = true, exists = false;
        for(int i =0;i<cityHistory.CityHistory.size();i++){
            c1 = cityHistory.CityHistory.get(i);
            if(city.equals(c1.getCityName())){
                if(c1.getCommunities().contains(community)){
                    for(int j=0; j<communityHistory.commHistory.size();j++){
                        comm = communityHistory.commHistory.get(j);
                        if(community.equals(comm.getCommName())){
                            for(int k=0; k<houseHistory.houseHistory.size();k++){
                                h1 = houseHistory.houseHistory.get(k);
                        
                                if(houses.equals(String.valueOf(h1.getHouseNumber()))){
                                    fetch  = false;
                                    h1.append(Name);
                                    house = h1;
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        }
        for(Person person: personDirectory.getPerHistory()){
            if(person.getPersonID().equals(ID)){
                exists = true;
            }
        }
        if(ID.length() == 0){
            JOptionPane.showMessageDialog(this, "ID cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(Name.length() == 0){
            JOptionPane.showMessageDialog(this, "Name cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(age<=0){
            JOptionPane.showMessageDialog(this, "You have entered an invalid age, Please enter again!!", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(houses.length()==0){
            JOptionPane.showMessageDialog(this, "House doesn't exist", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(community.length()==0){
            JOptionPane.showMessageDialog(this, "Community doesn't exist", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(city.length()==0){
            JOptionPane.showMessageDialog(this, "City doesn't exist", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(fetch){
            JOptionPane.showMessageDialog(this, "House doesn't exists in given city under provided community, please add house first", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(exists){
            JOptionPane.showMessageDialog(this, "Person already exists", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
}
